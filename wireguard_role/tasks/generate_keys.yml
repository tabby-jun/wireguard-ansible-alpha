#The server keys will be 0.private and 0.public. The client keys will start from 1 onwards.
#Note the number of clients is declared in "defaults/main.yml".

# This is how we avoid generating new keys every time this is run.
# To force re-generating everything, before running the
# playbook go on the server and do
#     wg-quick down wg0 && rm /etc/wireguard/wg0.conf 
# (simply removing wg0.conf without previously shutting down the service
# will make it impossible to shut down the service in an orderly fashion!)
- name: Check if wg0-server.conf already exists
  stat:
    path: /etc/wireguard/wg0.conf
  register: wg0_conf

- name: Generate private and public keys for the client and server
  shell: umask 077; wg genkey | tee {{ item }}.private | wg pubkey > {{ item }}.public
  register: key_files
  with_sequence: start=0 end={{ clients }}
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name: Register private key file contents
  shell: cat {{ item }}.private
  register: private_key_files
  with_sequence: start=0 end={{ clients }}
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name: Register public key file contents
  shell: cat {{ item }}.public
  register: public_key_files
  with_sequence: start=0 end={{ clients }}
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name: Generate server config
  template:
    src: "templates/server.conf"
    dest: "/etc/wireguard/wg0.conf"
    owner: root
    group: root
    mode: 0600
  when: wg0_conf is not defined or wg0_conf.stat.exists == false
      
- name: Generate client configs
  template:
    src: "templates/client.conf"
    dest: "~/client_{{ item }}.conf"
    owner: root
    group: root
    mode: 0600
  with_sequence: start=1 end={{ clients }}
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name: Generate template for additional clients in future
  template:
    src: "templates/add_client.conf"
    dest: "~/new_client.conf"
    owner: root
    group: root
    mode: 0600
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name:  Download the template for additional clients in future
  fetch: 
    src: "~/new_client.conf"
    dest: "wireguard_role/templates/new_client.conf"
    flat: yes
  when: wg0_conf is not defined or wg0_conf.stat.exists == false
# Should happen last among the config file creations, so if the process 
# is interrupted we will re-generate everything (the existence of the 
# server config is used to determine whether to generate the server and 
# client config files)
- name: Generate server config
  template:
    src: "templates/server.conf"
    dest: "/etc/wireguard/wg0.conf"
    owner: root
    group: root
    mode: 0600
  when: wg0_conf.stat is not defined or wg0_conf.stat.exists == false

- name: Print server public key
  debug:
    var: public_key_files.results[0].stdout
  when: wg0_conf.stat is not defined or wg0_conf.stat.exists == false

- name: Enable wireguard interface
  systemd:
    name: wg-quick@wg0
    enabled: yes
    state: started
  # when is omitted since state should be `started` regardless

- name: Register the clients on the vpn server
  shell: wg set wg0 peer {{ public_key_files.results[item|int].stdout }} allowed-ips {{ vpn_network }}.{{item|int + 1}}/32
  with_sequence: start=1 end={{ clients }}